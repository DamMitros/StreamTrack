secrets:
  tmdb_api_key:
    file: ./tmdb_api_key.secret

services:
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./database/mongo-init:/docker-entrypoint-initdb.d
    networks:
      - streamtrack
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: keycloak
    restart: always
    command: ["start-dev", "--import-realm"]
    environment:
      KC_DB: dev-file
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    networks:
      - streamtrack
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./keycloak:/opt/keycloak/data/import
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 bash -c '</dev/tcp/localhost/8080' || exit 1"]
      interval: 30s
      timeout: 10s      
      retries: 5
      start_period: 90s 

  tmdb-proxy:
    build:
      context: ./tmdb-proxy
      args:
        PYTHON_VERSION: 3.11-slim
    container_name: tmdb-proxy
    restart: always
    environment:
      TMDB_API_KEY_FILE: /run/secrets/tmdb_api_key
    secrets:
      - tmdb_api_key
    ports:
      - "9000:9000"
    networks:
      - streamtrack
    volumes:
      - ./tmdb-proxy:/app 
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/docs || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: ./api
      args:
        PYTHON_VERSION: 3.11-slim
    container_name: api
    env_file:
      - .env 
    ports:
      - "8000:8000"
    networks:
      - streamtrack
    depends_on:
      mongo:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    restart: always
    volumes:
      - ./api:/app 
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  frontend:
    build:
      context: ./frontend
      target: dev 
      args:
        NODE_VERSION: 20-alpine
    container_name: frontend
    restart: always
    ports:
      - "3000:3000"
    networks:
      - streamtrack
    env_file:
      - .env 
    volumes:
      - ./frontend:/app 
      - /app/node_modules 
      - /app/.next 
    command: npm run dev
    depends_on:
      api:
        condition: service_healthy
      tmdb-proxy:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    
volumes:
  keycloak_data:
  mongo_data:

networks:
  streamtrack:
    driver: bridge
